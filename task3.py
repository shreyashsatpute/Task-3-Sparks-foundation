# -*- coding: utf-8 -*-
"""Task3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QcNgr_6QMO5kitsf3sydzZiXAEhcN0xm

#K means Clustering

**Task** 3
"""

import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
from sklearn import datasets

df=sns.load_dataset("iris")

df.head(5)

df.info()

sns.pairplot(df,hue='species')

sns.heatmap(df.corr())

x = df.iloc[:,[0,1,2,3]].values

from sklearn.cluster import KMeans
wcss = []

for i in range(1,11):
    kmeans = KMeans(n_clusters = i, init = 'k-means++',random_state = 0)
    kmeans.fit(x)
    wcss.append(kmeans.inertia_)
    
plt.figure(figsize=(8,6))
plt.plot(range(1,11),wcss)
plt.title("Elbow Method")
plt.xlabel("No of clusters")
plt.ylabel('WCSS')  #Within CLuster Sum of Squares
plt.show()

kmeans = KMeans(n_clusters = 3,init = 'k-means++',random_state = 0)
y_kmeans = kmeans.fit_predict(x)
y_kmeans

plt.scatter(x[y_kmeans == 0, 0], x[y_kmeans == 0, 1], 
            s = 100, c = 'black', label = 'Iris-setosa')
plt.scatter(x[y_kmeans == 1, 0], x[y_kmeans == 1, 1], 
            s = 100, c = 'red', label = 'Iris-versicolour')
plt.scatter(x[y_kmeans == 2, 0], x[y_kmeans == 2, 1],
            s = 100, c = 'purple', label = 'Iris-virginica')
# Plotting the centroids of the clusters
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:,1], 
            s = 100, c = 'grey', label = 'Centroids')
plt.legend()

sns.set(rc={'figure.figsize':(10,8)})

